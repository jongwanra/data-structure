{\rtf1\ansi\ansicpg949\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset129 AppleSDGothicNeo-Regular;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red24\green24\blue28;\red253\green143\blue63;
\red252\green70\blue81;\red242\green36\blue140;\red102\green218\blue255;\red169\green255\blue234;\red108\green121\blue135;
\red53\green176\blue216;\red255\green231\blue109;\red255\green231\blue109;\red86\green208\blue179;\red171\green100\blue255;
\red86\green208\blue179;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c9472\c9472\c11000;\csgenericrgb\c99216\c56078\c24706;
\csgenericrgb\c98824\c27451\c31765;\csgenericrgb\c94752\c13993\c54713;\csgenericrgb\c40000\c85490\c100000;\csgenericrgb\c66399\c100000\c91903;\csgenericrgb\c42353\c47451\c52941;
\csgenericrgb\c20784\c69020\c84706;\csgenericrgb\c100000\c90556\c42780;\csgenericrgb\c100000\c90588\c42745;\csgenericrgb\c33726\c81569\c70196;\csgenericrgb\c67059\c39216\c100000;
\csgenericrgb\c33577\c81593\c70189;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab939
\pard\tx939\pardeftab939\pardirnatural\partightenfactor0

\f0\fs38 \cf2 \cb3 \
\cf4 #include \cf5 <stdio.h>\cf2 \
\cf4 #include \cf5 <string.h>\cf2 \
\cf4 #include \cf5 <stdlib.h>\cf2 \
\

\f1\b \cf6 typedef
\f0\b0 \cf2  
\f1\b \cf6 struct
\f0\b0 \cf2  \cf7 Group\cf2 \{\
    
\f1\b \cf6 char
\f0\b0 \cf2  data;\
    
\f1\b \cf6 struct
\f0\b0 \cf2  \cf7 Header\cf2  *header;\
\}Groups;\
\

\f1\b \cf6 typedef
\f0\b0 \cf2  
\f1\b \cf6 struct
\f0\b0 \cf2  \cf7 element\cf2 \{\
    
\f1\b \cf6 char
\f0\b0 \cf2  data;\
    
\f1\b \cf6 struct
\f0\b0 \cf2  \cf8 Header\cf2  *header;\
\}Elements;\
\

\f1\b \cf6 typedef
\f0\b0 \cf2  
\f1\b \cf6 struct
\f0\b0 \cf2  \cf7 Header\cf2 \{\
    
\f1\b \cf6 struct
\f0\b0 \cf2  \cf8 Header\cf2 * nextelement;\
    
\f1\b \cf6 char
\f0\b0 \cf2  e_data; \cf9 //element 
\f2 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f2 \'c0\'fa\'c0\'e5\'c0\'bb
\f0  
\f2 \'c0\'a7\'c7\'d4
\f0 \cf2 \
    
\f1\b \cf6 char
\f0\b0 \cf2  g_data; \cf9 //group 
\f2 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f2 \'c0\'fa\'c0\'e5\'c0\'bb
\f0  
\f2 \'c0\'a7\'c7\'d4
\f0 \cf2 \
    
\f1\b \cf6 struct
\f0\b0 \cf2  \cf8 Header\cf2 * nextgroup;\
\}Header;\
\
\

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 initShare\cf2 (\cf8 Groups\cf2 * g_arr, \cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 int
\f0\b0 \cf2  NE, 
\f1\b \cf6 int
\f0\b0 \cf2  NG);\

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 addShare\cf2 (\cf8 Groups\cf2 * g_arr, \cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  e, 
\f1\b \cf6 char
\f0\b0 \cf2  g);\

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 traverseShareElements\cf2 (\cf8 Groups\cf2 * g_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  g);\

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 traverseShareGroups\cf2 (\cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  e);\

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 removeShare\cf2 (\cf8 Groups\cf2 * g_arr, \cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  e, 
\f1\b \cf6 char
\f0\b0 \cf2  g);\

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 visit\cf2 (\cf8 Header\cf2  * p, 
\f1\b \cf6 int
\f0\b0 \cf2  flag);\
\

\f1\b \cf6 int
\f0\b0 \cf2  \cf10 main\cf2 ()\{\
    \cf9 //
\f2 \'b1\'b8\'c1\'b6\'c3\'bc
\f0  
\f2 \'b9\'e8\'bf\'ad
\f0  
\f2 \'bc\'b1\'be\'f0
\f0  
\f2 \'b9\'d7
\f0  
\f2 \'c3\'ca\'b1\'e2\'c8\'ad
\f0 \cf2 \
    \cf8 Groups\cf2  g_arr[\cf11 5\cf2 ] = \{\{\cf12 'A'\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}, \{\cf12 'B'\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}, \{\cf12 'C'\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}, \{\cf12 'D'\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}\};\
    \cf8 Elements\cf2  e_arr[\cf11 4\cf2 ] = \{\{\cf11 1\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}, \{\cf11 2\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}, \{\cf11 3\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}, \{\cf11 4\cf2 , 
\f1\b \cf6 NULL
\f0\b0 \cf2 \}\};\
    \
    \
    \cf9 //header 
\f2 \'b5\'bf\'c0\'fb
\f0  
\f2 \'c7\'d2\'b4\'e7
\f0  
\f2 \'b9\'d7
\f0  
\f2 \'bf\'ac\'b0\'e1
\f0 (
\f2 \'c3\'ca\'b1\'e2\'c8\'ad
\f0 )\cf2 \
    \cf13 initShare\cf2 (g_arr, e_arr, \cf11 4\cf2 , \cf11 5\cf2 );\
    \
    
\f1\b \cf6 while
\f0\b0 \cf2 (\cf11 1\cf2 )\{\
        
\f1\b \cf6 char
\f0\b0 \cf2  cmd,e,g;\
        \cf14 scanf\cf2 (\cf5 "%c"\cf2 , &cmd);\
        \cf14 getchar\cf2 ();\
        \
        
\f1\b \cf6 switch
\f0\b0 \cf2 (cmd)\{\
                \cf9 //
\f2 \'b3\'eb\'b5\'e5
\f0  
\f2 \'c3\'df\'b0\'a1
\f0 \cf2 \
            
\f1\b \cf6 case
\f0\b0 \cf2  \cf12 'a'\cf2 :\
                \cf14 scanf\cf2 (\cf5 "%c %c"\cf2 , &e, &g);\
                \cf14 getchar\cf2 ();\
                \cf13 addShare\cf2 (g_arr,e_arr, e, g);\
                
\f1\b \cf6 break
\f0\b0 \cf2 ;\
                \
                \cf9 //
\f2 \'b3\'eb\'b5\'e5
\f0  
\f2 \'c1\'a6\'b0\'c5
\f0 \cf2 \
            
\f1\b \cf6 case
\f0\b0 \cf2  \cf12 'r'\cf2 :\
                \cf14 scanf\cf2 (\cf5 "%c %c"\cf2 , &e, &g);\
                \cf14 getchar\cf2 ();\
                \cf13 removeShare\cf2 (g_arr,e_arr, e, g);\
                
\f1\b \cf6 break
\f0\b0 \cf2 ;\
                \
                \cf9 //
\f2 \'c7\'d8\'b4\'e7
\f0  
\f2 \'b1\'d7\'b7\'ec
\f0  
\f2 \'b6\'f3\'c0\'ce
\f0  
\f2 \'c3\'e2\'b7\'c2
\f0 \cf2 \
            
\f1\b \cf6 case
\f0\b0 \cf2  \cf12 'e'\cf2 :\
                \cf14 scanf\cf2 (\cf5 "%c"\cf2 , &g);\
                \cf14 getchar\cf2 ();\
                \cf13 traverseShareElements\cf2 (g_arr, g);\
                
\f1\b \cf6 break
\f0\b0 \cf2 ;\
                \cf9 //
\f2 \'c7\'d8\'b4\'e7
\f0  
\f2 \'bf\'e4\'bc\'d2
\f0  
\f2 \'b6\'f3\'c0\'ce
\f0  
\f2 \'c3\'e2\'b7\'c2
\f0 \cf2 \
            
\f1\b \cf6 case
\f0\b0 \cf2  \cf12 'g'\cf2 :\
                \cf14 scanf\cf2 (\cf5 "%c"\cf2 , &e);\
                \cf14 getchar\cf2 ();\
                \cf13 traverseShareGroups\cf2 (e_arr, e);\
                
\f1\b \cf6 break
\f0\b0 \cf2 ;\
                \cf9 //
\f2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5
\f0  
\f2 \'c1\'be\'b7\'e1
\f0 \cf2 \
            
\f1\b \cf6 case
\f0\b0 \cf2  \cf12 'q'\cf2 :\
                
\f1\b \cf6 return
\f0\b0 \cf2  -\cf11 1\cf2 ;\
        \}\
    \}\
    
\f1\b \cf6 return
\f0\b0 \cf2  \cf11 0\cf2 ;\
\}\
\
\
\cf9 //header 
\f2 \'b5\'bf\'c0\'fb
\f0  
\f2 \'c7\'d2\'b4\'e7
\f0  
\f2 \'b9\'d7
\f0  
\f2 \'bf\'ac\'b0\'e1
\f0 (
\f2 \'c3\'ca\'b1\'e2\'c8\'ad
\f0 )\cf2 \

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 initShare\cf2 (\cf8 Groups\cf2 * g_arr, \cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 int
\f0\b0 \cf2  NE, 
\f1\b \cf6 int
\f0\b0 \cf2  NG)\{\
    \cf8 Header\cf2 * H = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \
    
\f1\b \cf6 for
\f0\b0 \cf2 (
\f1\b \cf6 int
\f0\b0 \cf2  i = \cf11 0\cf2 ; i < NE; i++)\{\
        H = (\cf8 Header\cf2  *)\cf14 malloc\cf2 (
\f1\b \cf6 sizeof
\f0\b0 \cf2 (\cf8 Header\cf2 ));\
        H->\cf15 nextelement\cf2  = H;\
        e_arr[i].\cf15 header\cf2  = H;\
    \}\
    \
    
\f1\b \cf6 for
\f0\b0 \cf2 (
\f1\b \cf6 int
\f0\b0 \cf2  i = \cf11 0\cf2 ; i < NG; i++)\{\
        H = (\cf8 Header\cf2  *)\cf14 malloc\cf2 (
\f1\b \cf6 sizeof
\f0\b0 \cf2 (\cf8 Header\cf2 ));\
        H->\cf15 nextgroup\cf2  = H;\
        g_arr[i].\cf15 header\cf2  = H;\
    \}\
    \
\}\
\
\cf9 //
\f2 \'b3\'eb\'b5\'e5
\f0  
\f2 \'bb\'fd\'bc\'ba
\f0  
\f2 \'b8\'de\'bd\'ee\'b5\'e5
\f0 \cf2 \

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 addShare\cf2 (\cf8 Groups\cf2 * g_arr, \cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  e, 
\f1\b \cf6 char
\f0\b0 \cf2  g)\{\
    \cf8 Header\cf2 * p = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * g_cur = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * e_cur = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * HG = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * HE = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \
    p =(\cf8 Header\cf2  *) \cf14 malloc\cf2 (
\f1\b \cf6 sizeof
\f0\b0 \cf2 (\cf8 Header\cf2 ));\
    \cf9 //header 
\f2 \'c0\'a7\'c4\'a1
\f0  
\f2 \'b1\'e2\'be\'ef\'bd\'c3\'c5\'b0\'b1\'e2
\f0  
\f2 \'c0\'a7\'c7\'d4
\f0 \cf2 \
    HG = g_arr[g-\cf12 'A'\cf2 ].\cf15 header\cf2 ;\
    HE = e_arr[e-\cf12 '1'\cf2 ].\cf15 header\cf2 ;\
    \
    g_cur = HG;\
    e_cur = HE;\
    \
    \cf9 //
\f2 \'b3\'eb\'b5\'e5
\f0  
\f2 \'bb\'fd\'bc\'ba\'c7\'d2
\f0  
\f2 \'c0\'a7\'c4\'a1\'b8\'a6
\f0  
\f2 \'c3\'a3\'be\'c6\'b0\'a8
\f0 .\cf2 \
    
\f1\b \cf6 while
\f0\b0 \cf2 (g_cur->\cf15 nextgroup\cf2  != HG)\
        g_cur = g_cur->\cf15 nextgroup\cf2 ;\
    
\f1\b \cf6 while
\f0\b0 \cf2 (e_cur->\cf15 nextelement\cf2  != HE)\
        e_cur = e_cur->\cf15 nextelement\cf2 ;\
    \
    \cf9 //
\f2 \'b3\'eb\'b5\'e5
\f0  
\f2 \'bb\'fd\'bc\'ba
\f0 \cf2 \
    g_cur->\cf15 nextgroup\cf2  = p;\
    e_cur->\cf15 nextelement\cf2  = p;\
    \
    p->\cf15 nextelement\cf2  = HE;\
    p->\cf15 nextgroup\cf2  = HG;\
    \
    p->\cf15 e_data\cf2  = e;\
    p->\cf15 g_data\cf2  = g;\
    \
    \cf14 printf\cf2 (\cf5 "OK\\n"\cf2 );\
\}\
\
\
\cf9 //
\f2 \'c7\'d8\'b4\'e7
\f0  
\f2 \'b1\'d7\'b7\'ec
\f0  
\f2 \'b6\'f3\'c0\'ce
\f0  
\f2 \'c3\'e2\'b7\'c2
\f0 \cf2 \

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 traverseShareElements\cf2 (\cf8 Groups\cf2 * g_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  g)\{\
    \cf8 Header\cf2 * H = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * p = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \
    H = g_arr[g-\cf12 'A'\cf2 ].\cf15 header\cf2 ;\
    p = H->\cf15 nextgroup\cf2 ;\
    
\f1\b \cf6 if
\f0\b0 \cf2 (p == H)\
        \cf14 printf\cf2 (\cf5 "0"\cf2 );\
    
\f1\b \cf6 while
\f0\b0 \cf2 (p != H)\{\
        \cf13 visit\cf2 (p , \cf11 1\cf2 );\
        p = p->\cf15 nextgroup\cf2 ;\
    \}\
    \cf14 printf\cf2 (\cf5 "\\n"\cf2 );\
\}\
\
\cf9 //
\f2 \'c7\'d8\'b4\'e7
\f0  
\f2 \'bf\'e4\'bc\'d2
\f0  
\f2 \'b6\'f3\'c0\'ce
\f0  
\f2 \'c3\'e2\'b7\'c2
\f0 \cf2 \

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 traverseShareGroups\cf2 (\cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  e)\{\
    \cf8 Header\cf2 * H = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * p = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \
    H = e_arr[e-\cf12 '1'\cf2 ].\cf15 header\cf2 ;\
    p = H->\cf15 nextelement\cf2 ;\
    \
    
\f1\b \cf6 if
\f0\b0 \cf2 (p == H)\
        \cf14 printf\cf2 (\cf5 "0"\cf2 );\
    
\f1\b \cf6 while
\f0\b0 \cf2 (p != H)\{\
        \cf13 visit\cf2 (p, \cf11 0\cf2 );\
        p = p->\cf15 nextelement\cf2 ;\
    \}\
    \cf14 printf\cf2 (\cf5 "\\n"\cf2 );\
\}\
\
\cf9 //
\f2 \'c1\'b8\'c0\'e7
\f0  
\f2 \'c7\'cf\'b4\'c2
\f0  
\f2 \'bf\'e4\'bc\'d2\'b5\'e9
\f0  
\f2 \'c3\'e2\'b7\'c2\'bd\'c3\'c5\'b0\'b4\'c2
\f0  
\f2 \'c7\'d4\'bc\'f6
\f0 \cf2 \

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 visit\cf2 (\cf8 Header\cf2  *p, 
\f1\b \cf6 int
\f0\b0 \cf2  flag)\{\
    \cf9 //element\cf2 \
    
\f1\b \cf6 if
\f0\b0 \cf2 (flag == \cf11 1\cf2 )\
        \cf14 printf\cf2 (\cf5 "%c "\cf2 , p->\cf15 e_data\cf2 );\
    \cf9 //group\cf2 \
    
\f1\b \cf6 else
\f0\b0 \cf2 \
        \cf14 printf\cf2 (\cf5 "%c "\cf2 , p->\cf15 g_data\cf2 );\
\}\
\
\cf9 //
\f2 \'b3\'eb\'b5\'e5
\f0  
\f2 \'c1\'a6\'b0\'c5
\f0  
\f2 \'c7\'d4\'bc\'f6
\f0 \cf2 \

\f1\b \cf6 void
\f0\b0 \cf2  \cf10 removeShare\cf2 (\cf8 Groups\cf2 * g_arr, \cf8 Elements\cf2 * e_arr, 
\f1\b \cf6 char
\f0\b0 \cf2  e, 
\f1\b \cf6 char
\f0\b0 \cf2  g)\{\
    \cf9 //
\f2 \'b0\'a1\'b7\'ce
\f0 , 
\f2 \'bc\'bc\'b7\'ce\'b7\'ce
\f0  
\f2 \'b0\'a2\'b0\'a2
\f0  
\f2 \'c7\'f6\'c0\'e7\'b8\'a6
\f0  
\f2 \'b0\'a1\'b8\'a3\'c5\'b0\'b4\'c2
\f0  cur
\f2 \'b0\'fa
\f0  
\f2 \'b1\'d7
\f0  
\f2 \'c0\'fc\'c0\'bb
\f0  
\f2 \'b0\'a1\'b8\'a3\'c5\'b0\'b4\'c2
\f0  b_cur 
\f2 \'bc\'b1\'be\'f0
\f0  
\f2 \'b9\'d7
\f0  
\f2 \'c3\'ca\'b1\'e2\'c8\'ad
\f0 \cf2 \
    \cf8 Header\cf2 * g_cur = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * e_cur = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * bg_cur = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \cf8 Header\cf2 * be_cur = 
\f1\b \cf6 NULL
\f0\b0 \cf2 ;\
    \
    \
    g_cur = g_arr[g-\cf12 'A'\cf2 ].\cf15 header\cf2 ;\
    e_cur = e_arr[e-\cf12 '1'\cf2 ].\cf15 header\cf2 ;\
    \
    \cf9 //group
\f2 \'b6\'f3\'c0\'ce\'c0\'bb
\f0  
\f2 \'c5\'eb\'c7\'d8\'bc\'ad
\f0  
\f2 \'c7\'d8\'b4\'e7
\f0  
\f2 \'c0\'a7\'c4\'a1
\f0  
\f2 \'c6\'c4\'be\'c7
\f0 \cf2 \
    
\f1\b \cf6 while
\f0\b0 \cf2 (g_cur->\cf15 e_data\cf2  != e)\{\
        bg_cur = g_cur;\
        g_cur = g_cur->\cf15 nextgroup\cf2 ;\
    \}\
    \
    \cf9 //element
\f2 \'b6\'f3\'c0\'ce\'c0\'bb
\f0  
\f2 \'c5\'eb\'c7\'d1
\f0  
\f2 \'c7\'d8\'b4\'e7
\f0  
\f2 \'c0\'a7\'c2\'f7
\f0  
\f2 \'c6\'c4\'be\'c7
\f0 \cf2 \
    
\f1\b \cf6 while
\f0\b0 \cf2 (e_cur->\cf15 g_data\cf2  != g)\{\
        be_cur = e_cur;\
        e_cur = e_cur->\cf15 nextelement\cf2 ;\
    \}\
    \
    \
    
\f1\b \cf6 if
\f0\b0 \cf2 (g_cur->\cf15 nextgroup\cf2  == g_arr[g-\cf12 'A'\cf2 ].\cf15 header\cf2 \
       && e_cur->\cf15 nextelement\cf2 ->\cf15 nextelement\cf2  == e_arr[e-\cf12 '1'\cf2 ].\cf15 header\cf2 )\{\
        \cf9 //group , element 
\f2 \'b6\'f3\'c0\'ce
\f0  
\f2 \'b5\'d1
\f0  
\f2 \'b4\'d9
\f0  
\f2 \'b8\'c7
\f0  
\f2 \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1
\f0  
\f2 \'c0\'a7\'c4\'a1
\f0  
\f2 \'c7\'d2
\f0  
\f2 \'b6\'a7
\f0 \cf2 \
        bg_cur->\cf15 nextgroup\cf2  = g_arr[g-\cf12 'A'\cf2 ].\cf15 header\cf2 ;\
        be_cur->\cf15 nextgroup\cf2  = e_arr[e-\cf12 '1'\cf2 ].\cf15 header\cf2 ;\
        \cf14 free\cf2 (g_cur);\
    \}
\f1\b \cf6 else
\f0\b0 \cf2  
\f1\b \cf6 if
\f0\b0 \cf2 (g_cur->\cf15 nextgroup\cf2  == g_arr[g-\cf12 'A'\cf2 ].\cf15 header\cf2 )\{\
        \cf9 //group 
\f2 \'b6\'f3\'c0\'ce\'b8\'b8
\f0  
\f2 \'b8\'c7
\f0  
\f2 \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1
\f0  
\f2 \'c0\'a7\'c4\'a1
\f0  
\f2 \'c7\'d2
\f0  
\f2 \'b6\'a7
\f0 \cf2 \
        bg_cur->\cf15 nextgroup\cf2  = g_arr[g-\cf12 'A'\cf2 ].\cf15 header\cf2 ;\
        be_cur->\cf15 nextelement\cf2  = e_cur->\cf15 nextelement\cf2 ;\
        \cf14 free\cf2 (e_cur);\
    \}
\f1\b \cf6 else
\f0\b0 \cf2  
\f1\b \cf6 if
\f0\b0 \cf2 (e_cur->\cf15 nextelement\cf2 ->\cf15 nextelement\cf2  == e_arr[e-\cf12 '1'\cf2 ].\cf15 header\cf2 )\{\
        \cf9 //element 
\f2 \'b6\'f3\'c0\'ce\'b8\'b8
\f0  
\f2 \'b8\'c7
\f0  
\f2 \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1
\f0  
\f2 \'c0\'a7\'c4\'a1
\f0  
\f2 \'c7\'d2
\f0  
\f2 \'b6\'a7
\f0 \cf2 \
        be_cur->\cf15 nextelement\cf2  = e_arr[e-\cf12 '1'\cf2 ].\cf15 header\cf2 ;\
        bg_cur->\cf15 nextgroup\cf2  = g_cur->\cf15 nextgroup\cf2 ;\
        \cf14 free\cf2 (g_cur);\
    \}
\f1\b \cf6 else
\f0\b0 \cf2 \{\
        \cf9 //
\f2 \'b3\'aa\'b8\'d3\'c1\'f6
\f0 \cf2 \
        be_cur->\cf15 nextelement\cf2  = e_cur->\cf15 nextelement\cf2 ;\
        bg_cur->\cf15 nextgroup\cf2  = g_cur->\cf15 nextgroup\cf2 ;\
        \cf14 free\cf2 (g_cur);\
    \}\
    \cf14 printf\cf2 (\cf5 "OK\\n"\cf2 );\
\}\
\
\
}